<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="KinaUnaXamarin.Views.MyFamily.MyChildrenPage"
             xmlns:i18n="clr-namespace:KinaUnaXamarin.Helpers"
             xmlns:models="clr-namespace:KinaUnaXamarin.Models;assembly=KinaUnaXamarin"
             xmlns:myFamily="clr-namespace:KinaUnaXamarin.ViewModels.MyFamily;assembly=KinaUnaXamarin"
             xmlns:kinaUna="clr-namespace:KinaUnaXamarin.Models.KinaUna;assembly=KinaUnaXamarin"
             Title="{i18n:Translate MyChildren}"
             Visual="Material"
             BackgroundColor="WhiteSmoke">
    <ContentPage.Resources>
        <i18n:InverseBoolConverter x:Key="InverseBoolConverter" />
    </ContentPage.Resources>
    <ContentPage.BindingContext>
        <myFamily:MyChildrenViewModel />
    </ContentPage.BindingContext>
    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="ReloadToolbarButton" Text="Refresh" IconImageSource="reloadicon.png"
                     Clicked="ReloadToolbarButton_OnClicked" />
        <ToolbarItem x:Name="AddItemToolbarButton" Text="Add" IconImageSource="addicon.png" Clicked="AddItemToolbarButton_OnClicked" />
        <ToolbarItem x:Name="ProgenyToolBarItem" IconImageSource="childicon.png"
                     Clicked="ProgenyToolBarItem_OnClicked" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid x:Name="ContainerGrid" BackgroundColor="LightGray">
            <Grid.Margin>
                <OnPlatform x:TypeArguments="Thickness" Default="0, 0, 0, 0">
                    <On Platform="UWP">0,0,40,0</On>
                </OnPlatform>
            </Grid.Margin>
            <ScrollView>
                <Grid>
                    <StackLayout Orientation="Vertical" Margin="5" IsVisible="{Binding AnyChildren}">
                        <CollectionView x:Name="ProgenyCollectionView" ItemsLayout="HorizontalList" SelectionMode="Single" HeightRequest="105" SelectionChanged="ProgenyCollectionView_OnSelectionChanged">
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Padding="10" x:DataType="kinaUna:Progeny">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20" />
                                            <RowDefinition Height="60" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40" />
                                            <ColumnDefinition Width="160" />
                                        </Grid.ColumnDefinitions>
                                        <BoxView Color="White" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                        <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Source="{Binding PictureLink}"
                                       Aspect="AspectFit"
                                       WidthRequest="40" />
                                        <Label Grid.Row="0" Grid.Column="1"
                                       Text="{Binding NickName}"
                                       FontAttributes="Bold"
                                       FontSize="16"
                                       TextColor="Black"
                                       Margin="10, 0 , 0, 0"/>
                                        <Label Grid.Row="1" Grid.Column="1"
                                       Text="{Binding Name}"
                                       TextColor="DarkSlateGray"
                                       Margin="10, 0, 0, 0"/>
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate Name}" TextColor="DarkSlateGray"></Label>
                            <Label Text="{Binding Progeny.Name}" BackgroundColor="WhiteSmoke" TextColor="Black" Margin="10, 0, 0, 10" IsVisible="{Binding EditMode,Converter={StaticResource InverseBoolConverter}}"></Label>
                            <Entry x:Name="NameEntry" HorizontalOptions="FillAndExpand" Text="{Binding Progeny.Name}" IsVisible="{Binding EditMode}" BackgroundColor="White" TextColor="Black"></Entry>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate DisplayName}" TextColor="DarkSlateGray"></Label>
                            <Label Text="{Binding Progeny.NickName}" BackgroundColor="WhiteSmoke" TextColor="Black" Margin="10, 0, 0, 10" IsVisible="{Binding EditMode,Converter={StaticResource InverseBoolConverter}}"></Label>
                            <Entry x:Name="DisplayNameEntry" HorizontalOptions="FillAndExpand" Text="{Binding Progeny.NickName}" IsVisible="{Binding EditMode}" BackgroundColor="White" TextColor="Black"></Entry>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate Birthday}" TextColor="DarkSlateGray"></Label>
                            <Label x:Name="BirthDayLabel" Text="{Binding ProgenyBirthDay, StringFormat='{0:dd-MMM-yyyy HH:mm}'}" 
                                   IsVisible="{Binding EditMode, Converter={StaticResource InverseBoolConverter}}" TextColor="Black"
                                   BackgroundColor="WhiteSmoke" Margin="10, 0, 0, 10"></Label>
                            <StackLayout Orientation="Horizontal" IsVisible="{Binding EditMode}">
                                <DatePicker x:Name="BirthdayDatePicker"  Date="{Binding ProgenyBirthDay.Date}" Format="dd-MMM-yyyy" BackgroundColor="White" TextColor="Black"></DatePicker>
                                <TimePicker x:Name="BirthdayTimePicker" Time="{Binding ProgenyBirthDay.TimeOfDay}" BackgroundColor="White" TextColor="Black" ></TimePicker>
                            </StackLayout>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate TimeZone}" TextColor="DarkSlateGray"></Label>
                            <Label Text="{Binding SelectedTimeZone.DisplayName}" IsEnabled="False"
                                   IsVisible="{Binding EditMode, Converter={StaticResource InverseBoolConverter}}" 
                                   BackgroundColor="WhiteSmoke" TextColor="Black" Margin="10, 0, 0, 10"></Label>
                            <Picker HorizontalOptions="FillAndExpand"  x:Name="TimeZonePicker" ItemsSource="{Binding TimeZoneList}"
                                    ItemDisplayBinding="{Binding DisplayName}" IsEnabled="{Binding EditMode}" IsVisible="{Binding EditMode}"
                                    SelectedItem="{Binding SelectedTimeZone}" TextColor="Black" BackgroundColor="White"
                                    ></Picker>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate ProfilePicture}" TextColor="DarkSlateGray"></Label>
                            <Image x:Name="ChildPicture" HeightRequest="100" HorizontalOptions="FillAndExpand" Source="{Binding ProfilePicture}" Margin="3"></Image>
                            <Button x:Name="SelectImageButton" Text="{i18n:Translate SelectImage}" Clicked="SelectImageButton_OnClicked" IsEnabled="{Binding EditMode}" IsVisible="{Binding EditMode}"></Button>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="0,1,0,0" Padding="4" BackgroundColor="WhiteSmoke">
                            <Label Text="{i18n:Translate Administrators}" TextColor="DarkSlateGray"></Label>
                            <Label Text="{Binding Progeny.Admins}" BackgroundColor="WhiteSmoke" TextColor="Black" Margin="10, 0, 0, 10" IsVisible="{Binding EditMode,Converter={StaticResource InverseBoolConverter}}"></Label>
                            <Editor x:Name="AdministratorsEntry" HorizontalOptions="FillAndExpand" Text="{Binding Progeny.Admins}" IsVisible="{Binding EditMode}" VerticalOptions="StartAndExpand" Keyboard="Email" AutoSize="TextChanges" BackgroundColor="White" TextColor="Black" ></Editor>
                        </StackLayout>
                        <Label x:Name="MessageLabel" Text="" IsVisible="False" TextColor="White" Margin="15" ></Label>
                        <StackLayout Orientation="Horizontal" Margin="5">
                            <Button x:Name="EditButton" Text="{x:Static models:IconFont.AccountEdit}" FontFamily="{StaticResource MaterialFontFamily}" FontSize="22" TextColor="White" BackgroundColor="#4caf50" Clicked="EditButton_OnClicked"></Button>
                            <Button x:Name="CancelButton" Text="{x:Static models:IconFont.Cancel}" FontFamily="{StaticResource MaterialFontFamily}" FontSize="22" TextColor="White" BackgroundColor="DimGray" Clicked="CancelButton_OnClicked" IsVisible="{Binding EditMode}"></Button>
                        </StackLayout>
                    </StackLayout>
                    <StackLayout Grid.Row="0" IsVisible="{Binding AnyChildren, Converter={StaticResource InverseBoolConverter}}">
                        <Label Text="{i18n:Translate NoChildrenFound}" TextColor="DarkSlateGray"></Label>
                    </StackLayout>
                    <ActivityIndicator IsEnabled="{Binding IsBusy}" IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}" Opacity="0.8" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" Margin="50"></ActivityIndicator>
                </Grid>
            </ScrollView>
            <StackLayout x:Name="OfflineStackLayout" IsVisible="False" BackgroundColor="Red" HorizontalOptions="FillAndExpand" VerticalOptions="Start">
                <Label Text="{i18n:Translate OfflineMessage}" TextColor="White" FontSize="16" HorizontalOptions="Center"></Label>
            </StackLayout>
            <Button Command="{Binding LoginCommand}" IsVisible="{Binding LoggedOut}" Text="{i18n:Translate LogInOrRegister}" HorizontalOptions="FillAndExpand" VerticalOptions="Start"
                    BackgroundColor="DarkGreen" TextColor="White" HeightRequest="60" FontSize="14" Margin="1" />
        </Grid>
    </ContentPage.Content>
</ContentPage>